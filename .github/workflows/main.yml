name: CI

on: [push, pull_request, workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: install wbg
        run: cargo install wasm-bindgen-cli
      - name: Setup Binaryen
        uses: Aandreba/setup-binaryen@v1.0.0
        with:
          token: ${{ github.token }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: pnpm install

      - name: Build Rewriter
        run: RELEASE=1 pnpm rewriter:build

      - name: Build Scramjet
        run: pnpm build

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: scramjet
          path: |
            dist/*.js
            dist/*.js.map

  upload:
    name: Upload Release
    runs-on: ubuntu-latest
    needs: build
    permissions: write-all
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Delete old release and tag
        uses: dev-drprasad/delete-tag-and-release@v1.0.1
        with:
          delete_release: true
          tag_name: latest
          github_token: ${{ github.token }}

      - name: Get artifacts
        uses: actions/download-artifact@v4
        with:
          name: scramjet
          path: build

      - name: Display structure of downloaded files
        run: ls -R

      - name: Zip files
        run: zip -r scramjet.zip build/

      - name: Release to GitHub
        uses: ncipollo/release-action@v1
        with:
          name: Continuous Build
          tag: latest
          commit: main
          body: "${{ github.event.head_commit.url }} ${{ github.event.head_commit.message }}"
          artifacts: "scramjet.zip"
          prerelease: true

  pages:
    name: Upload to Github Pages
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: pnpm install

      - name: Get artifacts
        uses: actions/download-artifact@v4
        with:
          name: scramjet
          path: dist

      - name: build statics
        run: bash buildstatic.sh

      - name: upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./staticbuild"

      - name: deploy to github
        id: deployment
        uses: actions/deploy-pages@v4
